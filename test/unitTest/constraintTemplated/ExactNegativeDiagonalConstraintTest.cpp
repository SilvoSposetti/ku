
#include "constraintTemplated/ExactNegativeDiagonalConstraint.hpp"

#include "ConstraintTestHelpers.hpp"

#include <doctest.h>

TEST_SUITE("Constraints") {

  TEST_CASE("ExactNegativeDiagonalConstraint") {

    SUBCASE("Members") {
      memberChecks<ExactNegativeDiagonalConstraint<PuzzleIntrinsics<{0, 0, 0}>{}>>();
    }

    SUBCASE("Implicit Option Coverage") {
      // Cases with zero
      GENERATE_SUBCASE(ExactNegativeDiagonalConstraint, 0, 0, 0);
      // Regular cases
      GENERATE_SUBCASE(ExactNegativeDiagonalConstraint, 1, 1, 1);
      GENERATE_SUBCASE(ExactNegativeDiagonalConstraint, 2, 2, 2);
      GENERATE_SUBCASE(ExactNegativeDiagonalConstraint, 3, 3, 3);
      GENERATE_SUBCASE(ExactNegativeDiagonalConstraint, 7, 7, 7);
      GENERATE_SUBCASE(ExactNegativeDiagonalConstraint, 8, 8, 8);
      GENERATE_SUBCASE(ExactNegativeDiagonalConstraint, 15, 15, 15);
    }

    SUBCASE("Explicit Options") {
      SUBCASE("2x2x2") {
        constexpr auto intriniscs = PuzzleIntrinsics<{2, 2, 2}>();
        checkConstraintOptions(ExactNegativeDiagonalConstraint<intriniscs>(),
                               2,
                               std::vector<Option>{{0}, {1}, {}, {}, {}, {}, {0}, {1}},
                               0,
                               {});
      }
      SUBCASE("5x5x5") {
        constexpr auto intriniscs = PuzzleIntrinsics<{5, 5, 5}>{};
        checkConstraintOptions(
            ExactNegativeDiagonalConstraint<intriniscs>(),
            5,
            std::vector<Option>{
                {0}, {1}, {2}, {3}, {4}, {}, {},  {},  {},  {},  {},  {},  {},  {},  {}, {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {}, {},  {},  {},  {0}, {1}, {2}, {3}, {4}, {}, {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {}, {},  {},  {},  {},  {},  {},  {},  {},  {}, {},  {},  {},  {0}, {1}, {2},
                {3}, {4}, {},  {},  {},  {}, {},  {},  {},  {},  {},  {},  {},  {},  {}, {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {}, {0}, {1}, {2}, {3}, {4}, {},  {},  {},  {}, {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {}, {},  {},  {},  {},  {},  {},  {},  {},  {}, {0}, {1}, {2}, {3}, {4},
            },
            0,
            {});
      }

      SUBCASE("9x9x9") {
        constexpr auto intriniscs = PuzzleIntrinsics<{9, 9, 9}>{};
        checkConstraintOptions(
            ExactNegativeDiagonalConstraint<intriniscs>(),
            9,
            std::vector<Option>{
                {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {0}, {1}, {2},
                {3}, {4}, {5}, {6}, {7}, {8}, {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {0}, {1}, {2}, {3}, {4}, {5},
                {6}, {7}, {8}, {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},  {},
                {},  {},  {},  {},  {},  {},  {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8},
            },
            0,
            {});
      }
    }
  }
}