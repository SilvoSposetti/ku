
#include "constraintTemplated/ColumnConstraint.hpp"

#include <doctest.h>

TEST_SUITE("Constraints: Items") {

  TEST_CASE("ColumnConstraint") {
    SUBCASE("4x4x4") {

      const auto constraint = ColumnConstraint<PuzzleIntrinsics<{4, 4, 4}>{}>();
      CHECK_EQ(constraint.getPrimaryItemsAmount(), 16);
      const auto expectedPrimaryItems = std::array<std::vector<int32_t>, 64>{
          std::vector{0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15},
          std::vector{0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15},
          std::vector{0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15},
          std::vector{0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15},
      };
      CHECK_EQ(constraint.primaryItems, expectedPrimaryItems);

      CHECK_EQ(constraint.getSecondaryItemsAmount(), 0);
      CHECK(std::ranges::all_of(constraint.secondaryItems, [&](const auto& option) { return option.empty(); }));
    }

    SUBCASE("9x9x9") {
      const auto constraint = ColumnConstraint<PuzzleIntrinsics<{9, 9, 9}>{}>();
      CHECK_EQ(constraint.getPrimaryItemsAmount(), 81);
      const auto expectedPrimaryItems = std::array<std::vector<int32_t>, 729>{
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
          std::vector{0},  {1},  {2},  {3},  {4},  {5},  {6},  {7},  {8},
          std::vector{9},  {10}, {11}, {12}, {13}, {14}, {15}, {16}, {17},
          std::vector{18}, {19}, {20}, {21}, {22}, {23}, {24}, {25}, {26},
          std::vector{27}, {28}, {29}, {30}, {31}, {32}, {33}, {34}, {35},
          std::vector{36}, {37}, {38}, {39}, {40}, {41}, {42}, {43}, {44},
          std::vector{45}, {46}, {47}, {48}, {49}, {50}, {51}, {52}, {53},
          std::vector{54}, {55}, {56}, {57}, {58}, {59}, {60}, {61}, {62},
          std::vector{63}, {64}, {65}, {66}, {67}, {68}, {69}, {70}, {71},
          std::vector{72}, {73}, {74}, {75}, {76}, {77}, {78}, {79}, {80},
      };
      CHECK_EQ(constraint.primaryItems, expectedPrimaryItems);

      CHECK_EQ(constraint.getSecondaryItemsAmount(), 0);
      CHECK(std::ranges::all_of(constraint.secondaryItems, [&](const auto& option) { return option.empty(); }));
    }
  }
}